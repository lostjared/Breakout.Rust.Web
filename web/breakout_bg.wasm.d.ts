/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_color_free(a: number): void;
export function __wbg_get_color_r(a: number): number;
export function __wbg_set_color_r(a: number, b: number): void;
export function __wbg_get_color_g(a: number): number;
export function __wbg_set_color_g(a: number, b: number): void;
export function __wbg_get_color_b(a: number): number;
export function __wbg_set_color_b(a: number, b: number): void;
export function color_new(a: number, b: number, c: number): number;
export function __wbg_paddle_free(a: number): void;
export function paddle_new(a: number, b: number, c: number): number;
export function paddle_move_left(a: number): void;
export function paddle_move_right(a: number): void;
export function paddle_color(a: number): number;
export function paddle_set_color(a: number, b: number): void;
export function __wbg_grid_free(a: number): void;
export function grid_new(): number;
export function grid_fill_rand(a: number): void;
export function grid_is_empty(a: number): number;
export function grid_get_block_color_type(a: number, b: number): number;
export function grid_set_block_color_type(a: number, b: number, c: number): void;
export function grid_colors(a: number, b: number): void;
export function grid_set_colors(a: number, b: number, c: number): void;
export function grid_index(a: number, b: number, c: number): number;
export function __wbg_ball_free(a: number): void;
export function ball_new(): number;
export function ball_reset(a: number): void;
export function ball_update(a: number, b: number, c: number): number;
export function ball_dx(a: number): number;
export function ball_set_dx(a: number, b: number): void;
export function ball_dy(a: number): number;
export function ball_set_dy(a: number, b: number): void;
export function __wbg_updateresult_free(a: number): void;
export function __wbg_get_updateresult_score_delta(a: number): number;
export function __wbg_set_updateresult_score_delta(a: number, b: number): void;
export function __wbg_get_updateresult_lives_delta(a: number): number;
export function __wbg_set_updateresult_lives_delta(a: number, b: number): void;
export function __wbg_breakout_free(a: number): void;
export function breakout_new(): number;
export function breakout_new_game(a: number): void;
export function breakout_update(a: number): number;
export function breakout_paddle(a: number): number;
export function breakout_set_paddle_xy(a: number, b: number, c: number): void;
export function breakout_set_paddle(a: number, b: number): void;
export function breakout_ball(a: number): number;
export function breakout_set_ball(a: number, b: number): void;
export function breakout_score(a: number): number;
export function breakout_set_score(a: number, b: number): void;
export function breakout_lives(a: number): number;
export function breakout_set_lives(a: number, b: number): void;
export function breakout_grid(a: number): number;
export function breakout_set_grid(a: number, b: number): void;
export function example_random_range_usage(): number;
export function paddle_set_x(a: number, b: number): void;
export function paddle_set_y(a: number, b: number): void;
export function ball_set_x(a: number, b: number): void;
export function ball_set_y(a: number, b: number): void;
export function paddle_x(a: number): number;
export function paddle_y(a: number): number;
export function ball_x(a: number): number;
export function ball_y(a: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
